pr:
  branches:
    include:
      - main
  paths:
    include:
      - .azure_pipelines_snp.yml
      - .snpcc_canary

trigger:
  branches:
    include:
      - main
      - "release/*"
    exclude:
      - "release/1.x"
      - "release/2.x"

schedules:
  - cron: "0 9-18/3 * * Mon-Fri"
    displayName: Regular build
    branches:
      include:
        - main
    always: true

jobs:
  - template: .azure-pipelines-templates/configure.yml

  - job: deploy_aci
    displayName: "Deploy ACI"
    pool:
      vmImage: ubuntu-20.04
    steps:
      - script: |
          echo -e "\nGenerating an SSH key for use with the executors..."
          ssh-keygen -t rsa -b 4096 -f ~/.ssh/id_rsa -N ""
          PUB_KEY=`cat ~/.ssh/id_rsa.pub`
          PRIV_KEY=`tr '\n' '?' < ~/.ssh/id_rsa`
          echo "##vso[task.setvariable variable=hostPrivKey;isOutput=true]$PRIV_KEY"
          echo -e "\nDone"
          echo -e "\nInstalling Azure CLI..."
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
          az login --service-principal -u $(CCF_SNP_CI_APP_ID) -p $(CCF_SNP_CI_SERVICE_PRINCIPAL_PASSWORD) --tenant $(CCF_SNP_CI_TENANT)
          pip install azure-mgmt-resource azure-identity azure-mgmt-containerinstance
          echo -e "\nInstalled Azure CLI and logged in"
          echo -e "\nDeploying Azure Container Instance/s..."
          python3.8 scripts/azure_deployment/arm_template.py deploy aci --subscription-id $(CCF_AZURE_SUBSCRIPTION_ID) --resource-group ccf-aci --aci-type dynamic-agent --deployment-name ci-$(Build.BuildNumber) --aci-ssh-keys "$PUB_KEY,$(CCF_HOST_PUB_KEY)" > ~/aci_ips
          IP_ADDRESSES=`cat ~/aci_ips`
          echo "##vso[task.setvariable variable=aciIp;isOutput=true]$IP_ADDRESSES"
          echo -e $IP_ADDRESSES
          echo -e "\nDone"
          echo -e "\nTesting SSH connection..."
          cat ~/.ssh/id_rsa
          ssh agent@$IP_ADDRESSES -o "StrictHostKeyChecking no" 'echo "Connected successfully"'
          echo -e "\nDone"
        env:
          CCF_SNP_CI_APP_ID: $(CCF_SNP_CI_APP_ID)
          CCF_SNP_CI_SERVICE_PRINCIPAL_PASSWORD: $(CCF_SNP_CI_SERVICE_PRINCIPAL_PASSWORD)
          CCF_SNP_CI_TENANT: $(CCF_SNP_CI_TENANT)
          CCF_AZURE_SUBSCRIPTION_ID: $(CCF_AZURE_SUBSCRIPTION_ID)
          CCF_HOST_PUB_KEY: $(CCF_HOST_PUB_KEY)
        name: deploy

  - job: test_snp
    displayName: "Test SNP"
    pool:
      vmImage: ubuntu-20.04
    dependsOn: deploy_aci
    variables:
      SSH_TARGET: $[ dependencies.deploy_aci.outputs['deploy.aciIp'] ]
      CCF_HOST_DYNAMIC_PRIV_KEY: $[ dependencies.deploy_aci.outputs['deploy.hostPrivKey'] ]
    steps:
      - script: |
          mkdir ~/.ssh
          echo $(CCF_HOST_DYNAMIC_PRIV_KEY) > ~/.ssh/id_rsa
          sudo chmod 600 ~/.ssh/id_rsa
          cat ~/.ssh/id_rsa
          tr '?' '\n' < ~/.ssh/id_rsa > ~/.ssh/id_rsa
          cat ~/.ssh/id_rsa
          ssh agent@$(SSH_TARGET) -o "StrictHostKeyChecking no" 'echo something'
        env:
          CCF_HOST_PRIV_KEY: $(CCF_HOST_PRIV_KEY)

      # - task: CopyFiles@2
      #   inputs:
      #     sourceFolder: "$(Agent.TempDirectory)"
      #     targetFolder: "~/.ssh/"
      #   displayName: "Copy secure file"

      # - task: InstallSSHKey@0
      #   displayName: "Install an SSH key"
      #   inputs:
      #     knownHostsEntry: $(CCF_HOST_PUB_KEY_FINGERPRINT)
      #     sshKeySecureFile: "remote_private_key"

      # - task: SSH@0
      #   inputs:
      #     sshEndpoint: agent@$(SSH_TARGET)
      #     runOptions: "commands"
      #     commands: "echo hello world && hostname"
      #     readyTimeout: "20000"

  # - template: .azure-pipelines-templates/test_on_remote.yml
  #   parameters:
  #     job_name: test_snp
  #     display_name: "Test SNP"
  #     depends_on:
  #       - deploy_aci
  #     run_on: $[ dependencies.deploy_aci.outputs['deploy.aciIp'] ]

  - job: cleanup_aci
    displayName: "Cleanup ACI"
    pool:
      vmImage: ubuntu-20.04
    dependsOn: test_snp
    condition: always()
    steps:
      - script: |
          echo -e "\Installing Azure CLI..."
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
          az login --service-principal -u $(CCF_SNP_CI_APP_ID) -p $(CCF_SNP_CI_SERVICE_PRINCIPAL_PASSWORD) --tenant $(CCF_SNP_CI_TENANT)
          pip install azure-mgmt-resource azure-identity azure-mgmt-containerinstance
          echo -e "\nInstalled Azure CLI and logged in"
          echo -e "\nRemoving Azure Container Instance/s..."
          python3.8 scripts/azure_deployment/arm_template.py remove aci --subscription-id $(CCF_AZURE_SUBSCRIPTION_ID) --resource-group ccf-aci --aci-type dynamic-agent --deployment-name ci-$(Build.BuildNumber)
          echo -e "\nDone"
        env:
          CCF_SNP_CI_APP_ID: $(CCF_SNP_CI_APP_ID)
          CCF_SNP_CI_SERVICE_PRINCIPAL_PASSWORD: $(CCF_SNP_CI_SERVICE_PRINCIPAL_PASSWORD)
          CCF_SNP_CI_TENANT: $(CCF_SNP_CI_TENANT)
          CCF_AZURE_SUBSCRIPTION_ID: $(CCF_AZURE_SUBSCRIPTION_ID)
