pr:
  branches:
    include:
      - main
  paths:
    include:
      - .azure_pipelines_snpcc.yml
      - .snpcc_canary

trigger:
  branches:
    include:
      - main
      - "release/*"
    exclude:
      - "release/1.x"
      - "release/2.x"

schedules:
  - cron: "0 9-18/3 * * Mon-Fri"
    displayName: Regular build
    branches:
      include:
        - main
        - "release/*"
      exclude:
        - "release/1.x"
        - "release/2.x"
    always: true

jobs:
  - job: deploy_aci
    displayName: "Deploy ACI"
    pool:
      vmImage: ubuntu-20.04
    steps:
      - script: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
          az login --service-principal -u $(CCF_SNP_CI_APP_ID) -p $(CCF_SNP_CI_SERVICE_PRINCIPAL_PASSWORD) --tenant $(CCF_SNP_CI_TENANT)
          pip install azure-mgmt-resource azure-identity azure-mgmt-containerinstance
          ssh-keygen -t rsa -f ~/.ssh/id_rsa -N ""
          python3.8 scripts/arm_template.py deploy aci --subscription-id $(CCF_AZURE_SUBSCRIPTION_ID) --resource-group ccf-aci --aci-type dynamic-agent --deployment-name ci-$(Build.BuildNumber) > deploy_out.txt
          echo "Key"
          cat ~/.ssh/id_rsa.pub
          cat deploy_out.txt
          IP=`cat deploy_out.txt`
          ssh root@$IP 'echo connected from step in same job'
          echo "##vso[task.setvariable variable=aciIp;isOutput=true]$IP"
        env:
          CCF_SNP_CI_APP_ID: $(CCF_SNP_CI_APP_ID)
          CCF_SNP_CI_SERVICE_PRINCIPAL_PASSWORD: $(CCF_SNP_CI_SERVICE_PRINCIPAL_PASSWORD)
          CCF_SNP_CI_TENANT: $(CCF_SNP_CI_TENANT)
          CCF_AZURE_SUBSCRIPTION_ID: $(CCF_AZURE_SUBSCRIPTION_ID)
        name: deploy
      - script: |
          echo "Key"
          cat ~/.ssh/id_rsa.pub
          echo "Variable"
          echo $(deploy.aciIp)
          echo "File"
          cat deploy_out.txt
          IP=`cat deploy_out.txt`
          ssh root@$IP 'echo connected from second step in same job'

  - job: test_ssh
    displayName: "Test SSH connection"
    pool:
      vmImage: ubuntu-20.04
    dependsOn: deploy_aci
    condition: always()
    steps:
      - script: |
          echo "Key"
          cat ~/.ssh/id_rsa.pub
          echo "Variable"
          echo $[ dependencies.deploy_aci.outputs['deploy.aciIp'] ]
          echo "File"
          cat deploy_out.txt
          IP=`cat deploy_out.txt`
          ssh root@$IP 'echo connected from step in next job'

  # - template: .azure-pipelines-templates/configure.yml
  #   parameters:
  #     depends_on: deploy_aci

  # - template: .azure-pipelines-templates/common.yml
  #   parameters:
  #     target: SNPCC
  #     env:
  #       pool: sev-snp-pool
  #     cmake_args: "-DCOMPILE_TARGET=snp -DCMAKE_BUILD_TYPE=Debug -DLVI_MITIGATIONS=OFF -DVERBOSE_LOGGING=ON"
  #     suffix: "Debug"
  #     artifact_name: "SNPCC_Debug"
  #     ctest_filter: '-LE "benchmark|perf|tlstest|vegeta|suite"'
  #     depends_on: configure

  - job: cleanup_aci
    displayName: "Cleanup ACI"
    pool:
      vmImage: ubuntu-20.04
    dependsOn: test_ssh
    condition: always()
    steps:
      - script: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
          az login --service-principal -u $(CCF_SNP_CI_APP_ID) -p $(CCF_SNP_CI_SERVICE_PRINCIPAL_PASSWORD) --tenant $(CCF_SNP_CI_TENANT)
          pip install azure-mgmt-resource azure-identity azure-mgmt-containerinstance
          python3.8 scripts/arm_template.py remove aci --subscription-id $(CCF_AZURE_SUBSCRIPTION_ID) --resource-group ccf-aci --aci-type dynamic-agent --deployment-name ci-$(Build.BuildNumber)
        env:
          CCF_SNP_CI_APP_ID: $(CCF_SNP_CI_APP_ID)
          CCF_SNP_CI_SERVICE_PRINCIPAL_PASSWORD: $(CCF_SNP_CI_SERVICE_PRINCIPAL_PASSWORD)
          CCF_SNP_CI_TENANT: $(CCF_SNP_CI_TENANT)
          CCF_AZURE_SUBSCRIPTION_ID: $(CCF_AZURE_SUBSCRIPTION_ID)
