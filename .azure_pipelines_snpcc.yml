pr:
  branches:
    include:
      - main
  paths:
    include:
      - .azure_pipelines_snpcc.yml
      - .snpcc_canary

trigger:
  branches:
    include:
      - main
      - "release/*"
    exclude:
      - "release/1.x"
      - "release/2.x"

schedules:
  - cron: "0 9-18/3 * * Mon-Fri"
    displayName: Regular build
    branches:
      include:
        - main
    always: true

jobs:
  - job: deploy_aci
    displayName: "Deploy ACI"
    pool:
      vmImage: ubuntu-20.04
    steps:
      - script: |
          ACI_PASS=`echo $RANDOM | md5sum | head -c 20`
          echo "##vso[task.setvariable variable=aciPass;isOutput=true]$ACI_PASS"
          echo "Installing Azure CLI..."
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
          az login --service-principal -u $(CCF_SNP_CI_APP_ID) -p $(CCF_SNP_CI_SERVICE_PRINCIPAL_PASSWORD) --tenant $(CCF_SNP_CI_TENANT)
          pip install azure-mgmt-resource azure-identity azure-mgmt-containerinstance
          echo "Installed Azure CLI and logged in"
          echo "Deploying Azure Container Instance..."
          python3.8 scripts/arm_template.py deploy aci --subscription-id $(CCF_AZURE_SUBSCRIPTION_ID) --resource-group ccf-aci --aci-type dynamic-agent --deployment-name ci-$(Build.BuildNumber) --aci-dynamic-agent-password $ACI_PASS > ~/aci_ips
          echo "##vso[task.setvariable variable=aciIp;isOutput=true]`cat ~/aci_ips`"
          echo "Done"
          echo "Testing SSH connection..."
          apt-get install sshpass
          sshpass -p $ACI_PASS ssh agent@$ACI_IP -o "StrictHostKeyChecking no"
          echo "Success"
        env:
          CCF_SNP_CI_APP_ID: $(CCF_SNP_CI_APP_ID)
          CCF_SNP_CI_SERVICE_PRINCIPAL_PASSWORD: $(CCF_SNP_CI_SERVICE_PRINCIPAL_PASSWORD)
          CCF_SNP_CI_TENANT: $(CCF_SNP_CI_TENANT)
          CCF_AZURE_SUBSCRIPTION_ID: $(CCF_AZURE_SUBSCRIPTION_ID)
        name: deploy

  - template: .azure-pipelines-templates/configure.yml
    parameters:
      depends_on: deploy_aci

  - template: .azure-pipelines-templates/common.yml
    parameters:
      target: SNPCC
      env:
        pool: sev-snp-pool
      cmake_args: "-DCOMPILE_TARGET=snp -DCMAKE_BUILD_TYPE=Debug -DLVI_MITIGATIONS=OFF -DVERBOSE_LOGGING=ON"
      suffix: "Debug"
      artifact_name: "SNPCC_Debug"
      ctest_filter: '-LE "benchmark|perf|tlstest|vegeta|suite"'
      depends_on: configure
      ssh_target: ACI_IP
    variables:
      ACI_IP: $[ dependencies.deploy_aci.outputs['deploy.aciIp'] ]

  - job: cleanup_aci
    displayName: "Cleanup ACI"
    pool:
      vmImage: ubuntu-20.04
    dependsOn: SNPCC_Debug
    condition: always()
    steps:
      - script: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
          az login --service-principal -u $(CCF_SNP_CI_APP_ID) -p $(CCF_SNP_CI_SERVICE_PRINCIPAL_PASSWORD) --tenant $(CCF_SNP_CI_TENANT)
          pip install azure-mgmt-resource azure-identity azure-mgmt-containerinstance
          python3.8 scripts/arm_template.py remove aci --subscription-id $(CCF_AZURE_SUBSCRIPTION_ID) --resource-group ccf-aci --aci-type dynamic-agent --deployment-name ci-$(Build.BuildNumber)
        env:
          CCF_SNP_CI_APP_ID: $(CCF_SNP_CI_APP_ID)
          CCF_SNP_CI_SERVICE_PRINCIPAL_PASSWORD: $(CCF_SNP_CI_SERVICE_PRINCIPAL_PASSWORD)
          CCF_SNP_CI_TENANT: $(CCF_SNP_CI_TENANT)
          CCF_AZURE_SUBSCRIPTION_ID: $(CCF_AZURE_SUBSCRIPTION_ID)
