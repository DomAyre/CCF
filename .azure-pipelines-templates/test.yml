parameters:
  suite_name_suffix: ""
  ctest_filter: ""
  ctest_timeout: "240"
  suffix: ""

steps:
  - template: run_on_target.yml
    parameters:
      ssh_target: ${{ parameters.ssh_target }}
      commands: |
        ./tests.sh -VV --timeout ${{ parameters.ctest_timeout }} --no-compress-output -T Test ${{ parameters.ctest_filter }}
      display_name: CTest
      working_directory: build

  # Only run privileged tests in container environment
  - ${{ if ne(parameters.suffix, 'Perf') }}:
      - template: run_on_target.yml
        parameters:
          ssh_target: ${{ parameters.ssh_target }}
          commands: |
            sudo bash -c "source env/bin/activate && ctest -VV --timeout ${{ parameters.ctest_timeout }} --no-compress-output -L partitions -C partitions"
          condition: succeededOrFailed()
          display_name: "CTest Partitions"
          working_directory: build

  - ${{ if not(eq(parameters.ssh_target, '')) }}:
      - script: |
          until rsync -av agent@$SSH_TARGET:/home/agent/CCF/build build
          do
            echo "Rsync issue, retrying"
          done
          echo $PWD
          ls -la
        displayName: "Copy build back to client"
        condition: always()

  # Only run privileged tests in container environment
  - ${{ if ne(parameters.suffix, 'Perf') }}:
      # This unconditional step is necessary as workspace files survive the container
      # in which they are created
      - script: |
          set -ex
          ci_user=$(whoami)
          sudo chown -R $ci_user: build
        condition: always()
        displayName: "Change root files ownership to ci user"

  # If a test fails, crudely upload nodes' logs for all tests
  - task: CopyFiles@2
    inputs:
      contents: "**/?(*out|*err)"
      sourceFolder: $(Build.SourcesDirectory)
      targetFolder: $(Build.ArtifactStagingDirectory)
    condition: or(failed(), canceled())
    displayName: "Copy logs (only on failure)"

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: $(Build.ArtifactStagingDirectory)
      artifactName: "workspace ${{ parameters.suite_name_suffix }}"
    condition: or(failed(), canceled())
    displayName: "Upload logs (only on failure)"

  - script: |
      set -ex
      sed -i -r "s/\[NON-XML-CHAR-0x1B\]\[([0-9]*)m//g" Testing/*/Test.xml
    displayName: "Remove color codes"
    workingDirectory: build

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: cTest
      testResultsFiles: "**/Test.xml"
      testRunTitle: "${{ parameters.suite_name_suffix }}"
      platform: "$(Agent.MachineName)"
    condition: succeededOrFailed()
