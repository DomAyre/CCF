jobs:
  - job: deploy_aci
    displayName: "Deploy ACI"
    pool:
      vmImage: ubuntu-20.04
    steps:
      - script: |
          ssh-keygen -t rsa -b 4096 -f ~/.ssh/id_rsa -N ""
          echo "##vso[task.setvariable variable=hostPubKey]`cat ~/.ssh/id_rsa.pub`"
          echo "##vso[task.setvariable variable=hostPrivKey;isOutput=true;issecret=true]`cat ~/.ssh/id_rsa | tr '\n' '?'`"
        name: generate_ssh_key

      - script: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
          az login --service-principal -u $(CCF_SNP_CI_APP_ID) -p $(CCF_SNP_CI_SERVICE_PRINCIPAL_PASSWORD) --tenant $(CCF_SNP_CI_TENANT)
          pip install azure-mgmt-resource azure-identity azure-mgmt-containerinstance
        name: setup_azure_cli
        env:
          CCF_SNP_CI_APP_ID: $(CCF_SNP_CI_APP_ID)
          CCF_SNP_CI_SERVICE_PRINCIPAL_PASSWORD: $(CCF_SNP_CI_SERVICE_PRINCIPAL_PASSWORD)
          CCF_SNP_CI_TENANT: $(CCF_SNP_CI_TENANT)

      - script: |
          python3.8 scripts/azure_deployment/arm_template.py deploy aci --subscription-id $(CCF_AZURE_SUBSCRIPTION_ID) --resource-group ccf-aci --aci-type dynamic-agent --deployment-name ci-$(Build.BuildNumber) --aci-ssh-keys "$(hostPubKey)" > ~/aci_ips
          IP_ADDRESSES=`cat ~/aci_ips`
          echo "##vso[task.setvariable variable=ipAddresses;isOutput=true]$IP_ADDRESSES"
        name: deploy_aci
        env:
          CCF_AZURE_SUBSCRIPTION_ID: $(CCF_AZURE_SUBSCRIPTION_ID)

      - script: |
          IFS='\n' read -ra IP_ADDR_LIST <<< "$(ipAddresses)"
          for IP_ADDR in "${IP_ADDR_LIST[@]}"; do
            echo -e "Testing connection with $IP_ADDR"
            ssh agent@$IP_ADDR -o "StrictHostKeyChecking no" 'echo "Connected successfully"'
          done
        name: test_ssh_connection
