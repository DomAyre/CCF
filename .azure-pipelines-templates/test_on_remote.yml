parameters:
  depends_on: ""
  condition: ""

jobs:
  - job: ${{ parameters.job_name }}
    displayName: ${{ parameters.display_name }}
    dependsOn: ${{ parameters.depends_on }}
    condition: ${{ parameters.condition }}
    pool:
      vmImage: ubuntu-20.04
    timeoutInMinutes: 120
    variables:
      RUN_ON: ${{ parameters.run_on }}
      HOST_PRIVATE_KEY: ${{ parameters.host_private_key }}
      SECONDARY_IPS_PATH: ${{ parameters.secondary_ips_path }}
      Codeql.SkipTaskAutoInjection: true
      skipComponentGovernanceDetection: true

    steps:
      - template: install_ssh_key.yml
        parameters:
          host_private_key: $(HOST_PRIVATE_KEY)

      - script: |
          set -ex
          mapfile -t IP_ADDR_LIST <<< $(echo "$(RUN_ON)" | awk '{print $2}')
          ssh agent@${IP_ADDR_LIST[0]} -o "StrictHostKeyChecking no" '
          cd /CCF/build
          npm config set cache /ccfci/workspace_$(Build.BuildNumber)/.npm
          WORKSPACE=/ccfci/workspace_$(Build.BuildNumber) ELECTION_TIMEOUT_MS=10000 SECONDARY_IPS_PATH="/home/agent/secondary_ips_path" ./tests.sh -VV -T Test -R code_update
          '
        name: run_ctest
        displayName: "Run CTest"

      - script: |
          set -ex
          mapfile -t IP_ADDR_LIST <<< $(echo "$(RUN_ON)" | awk '{print $2}')
          ssh agent@${IP_ADDR_LIST[0]} -o "StrictHostKeyChecking no" '
          dmesg
          '
        name: run_dmesg
        displayName: "Run DMesg"
        condition: always()
